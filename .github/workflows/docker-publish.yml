name: Build, Scan, and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-scan-publish:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifier le dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Étape 3 : Définir le nom du tag en minuscules
      - name: Set environment variables
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Étape 4 : Connexion au registre GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Étape 5 : Construire l'image Docker
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest

      # Étape 6 : Scanner l'image Docker avec Trivy
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest

      # Étape 7 : Publier l'image Docker (si le scan réussit)
      - name: Push Docker Image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest
            ghcr.io/${{ github.repository_owner }}/$REPO_NAME:${{ github.sha }}
